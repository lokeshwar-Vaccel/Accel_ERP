import Joi from 'joi';

// Base item schema for both products and services
const baseItemSchema = Joi.object({
  product: Joi.string().required().trim(),
  description: Joi.string().required().trim(),
  hsnCode: Joi.string().optional().trim(),
  partNo: Joi.string().optional().trim(),
  quantity: Joi.number().positive().required(),
  uom: Joi.string().required().trim(),
  unitPrice: Joi.number().positive().required(),
  discount: Joi.number().min(0).max(100).default(0),
  discountedAmount: Joi.number().min(0).required(),
  taxRate: Joi.number().min(0).max(100).required(),
  taxAmount: Joi.number().min(0).required(),
  totalPrice: Joi.number().positive().required(),
});

// Service item schema
const serviceItemSchema = Joi.object({
  serviceName: Joi.string().required().trim(),
  description: Joi.string().required().trim(),
  quantity: Joi.number().positive().required(),
  uom: Joi.string().required().trim(),
  unitPrice: Joi.number().positive().required(),
  discount: Joi.number().min(0).max(100).default(0),
  discountedAmount: Joi.number().min(0).required(),
  taxRate: Joi.number().min(0).max(100).required(),
  taxAmount: Joi.number().min(0).required(),
  totalPrice: Joi.number().positive().required(),
});

// Create DG Quotation Schema
export const createDGQuotationSchema = Joi.object({
  quotationNumber: Joi.string().required().trim(),
  issueDate: Joi.date().required(),
  validUntil: Joi.date().greater(Joi.ref('issueDate')).required(),
  dgEnquiry: Joi.string().optional().trim().allow(''),
  enquiryDetails: Joi.object({
    enquiryNo: Joi.string().optional().trim().allow(''),
    enquiryDate: Joi.date().optional(),
    enquiryType: Joi.string().optional().trim().allow(''),
    enquiryStatus: Joi.string().optional().trim().allow(''),
    enquiryStage: Joi.string().optional().trim().allow(''),
    assignedEmployeeName: Joi.string().optional().trim().allow(''),
    plannedFollowUpDate: Joi.date().optional(),
    numberOfFollowUps: Joi.number().integer().min(0).optional(),
  }).optional(),
  customer: Joi.object({
    _id: Joi.string().optional(),
    name: Joi.string().required().trim(),
    email: Joi.string().email().optional().allow(''),
    phone: Joi.string().optional().allow(''),
    pan: Joi.string().optional().allow(''),
    corporateName: Joi.string().optional().allow(''),
    address: Joi.string().optional().allow(''),
    pinCode: Joi.string().optional().allow(''),
    tehsil: Joi.string().optional().allow(''),
    district: Joi.string().optional().allow(''),
  }).required(),
  company: Joi.object({
    name: Joi.string().optional().trim(),
    logo: Joi.string().optional(),
    address: Joi.string().optional().trim(),
    phone: Joi.string().optional().trim(),
    email: Joi.string().email().optional().allow(''),
    pan: Joi.string().optional().trim(),
    bankDetails: Joi.object({
      bankName: Joi.string().optional().trim(),
      accountNo: Joi.string().optional().trim(),
      ifsc: Joi.string().optional().trim(),
      branch: Joi.string().optional().trim(),
    }).optional(),
  }).optional(),
  dgSpecifications: Joi.object({
    kva: Joi.string().required().trim(),
    phase: Joi.string().required().trim(),
    quantity: Joi.number().positive().required(),
    fuelType: Joi.string().optional().trim(),
    engineModel: Joi.string().optional().trim(),
    alternatorModel: Joi.string().optional().trim(),
    fuelTankCapacity: Joi.string().optional().trim(),
    runtime: Joi.string().optional().trim(),
    noiseLevel: Joi.string().optional().trim(),
    emissionCompliance: Joi.string().optional().trim(),
  }).required(),
  items: Joi.array().items(baseItemSchema).min(1).required(),
  services: Joi.array().items(serviceItemSchema).optional().default([]),
  subtotal: Joi.number().positive().required(),
  totalDiscount: Joi.number().min(0).required(),
  totalTax: Joi.number().min(0).required(),
  grandTotal: Joi.number().positive().required(),
  roundOff: Joi.number().default(0),
  notes: Joi.string().optional().allow(''),
  terms: Joi.string().optional().allow(''),
  validityPeriod: Joi.number().positive().required(),
  deliveryTerms: Joi.string().optional().allow(''),
  paymentTerms: Joi.string().optional().allow(''),
  warrantyTerms: Joi.string().optional().allow(''),
  installationTerms: Joi.string().optional().allow(''),
  commissioningTerms: Joi.string().optional().allow(''),
  status: Joi.string().valid('Draft', 'Sent', 'Accepted', 'Rejected', 'Expired').default('Draft'),
}).messages({
  'any.required': '{{#label}} is required',
  'string.empty': '{{#label}} cannot be empty',
  'number.positive': '{{#label}} must be positive',
  'number.min': '{{#label}} must be at least {{#limit}}',
  'number.max': '{{#label}} must be at most {{#limit}}',
  'date.greater': 'Valid until date must be after issue date',
  'array.min': 'At least one item is required',
});

// Update DG Quotation Schema (all fields optional)
export const updateDGQuotationSchema = Joi.object({
  quotationNumber: Joi.string().optional().trim(),
  issueDate: Joi.date().optional(),
  validUntil: Joi.date().optional(),
  dgEnquiry: Joi.string().optional().trim(),
  enquiryDetails: Joi.object({
    enquiryNo: Joi.string().optional().trim().allow(''),
    enquiryDate: Joi.date().optional(),
    enquiryType: Joi.string().optional().trim().allow(''),
    enquiryStatus: Joi.string().optional().trim().allow(''),
    enquiryStage: Joi.string().optional().trim().allow(''),
    assignedEmployeeName: Joi.string().optional().trim().allow(''),
    plannedFollowUpDate: Joi.date().optional(),
    numberOfFollowUps: Joi.number().integer().min(0).optional(),
  }).optional(),
  customer: Joi.object({
    _id: Joi.string().optional(),
    name: Joi.string().optional().trim(),
    email: Joi.string().email().optional().allow(''),
    phone: Joi.string().optional().allow(''),
    pan: Joi.string().optional().allow(''),
    corporateName: Joi.string().optional().allow(''),
    address: Joi.string().optional().allow(''),
    pinCode: Joi.string().optional().allow(''),
    tehsil: Joi.string().optional().allow(''),
    district: Joi.string().optional().allow(''),
  }).optional(),
  company: Joi.object({
    name: Joi.string().optional().trim(),
    logo: Joi.string().optional(),
    address: Joi.string().optional().trim(),
    phone: Joi.string().optional().trim(),
    email: Joi.string().email().optional().allow(''),
    pan: Joi.string().optional().trim(),
    bankDetails: Joi.object({
      bankName: Joi.string().optional().trim(),
      accountNo: Joi.string().optional().trim(),
      ifsc: Joi.string().optional().trim(),
      branch: Joi.string().optional().trim(),
    }).optional(),
  }).optional(),
  dgSpecifications: Joi.object({
    kva: Joi.string().optional().trim(),
    phase: Joi.string().optional().trim(),
    quantity: Joi.number().positive().optional(),
    fuelType: Joi.string().optional().trim(),
    engineModel: Joi.string().optional().trim(),
    alternatorModel: Joi.string().optional().trim(),
    fuelTankCapacity: Joi.string().optional().trim(),
    runtime: Joi.string().optional().trim(),
    noiseLevel: Joi.string().optional().trim(),
    emissionCompliance: Joi.string().optional().trim(),
  }).optional(),
  items: Joi.array().items(baseItemSchema).optional(),
  services: Joi.array().items(serviceItemSchema).optional(),
  subtotal: Joi.number().positive().optional(),
  totalDiscount: Joi.number().min(0).optional(),
  totalTax: Joi.number().min(0).optional(),
  grandTotal: Joi.number().positive().optional(),
  roundOff: Joi.number().optional(),
  notes: Joi.string().optional().allow(''),
  terms: Joi.string().optional().allow(''),
  validityPeriod: Joi.number().positive().optional(),
  deliveryTerms: Joi.string().optional().allow(''),
  paymentTerms: Joi.string().optional().allow(''),
  warrantyTerms: Joi.string().optional().allow(''),
  installationTerms: Joi.string().optional().allow(''),
  commissioningTerms: Joi.string().optional().allow(''),
  status: Joi.string().valid('Draft', 'Sent', 'Accepted', 'Rejected', 'Expired').optional(),
  sentDate: Joi.date().optional(),
  acceptedDate: Joi.date().optional(),
  rejectedDate: Joi.date().optional(),
  rejectionReason: Joi.string().optional().allow(''),
}).min(1).messages({
  'object.min': 'At least one field must be provided for update',
  'any.required': '{{#label}} is required',
  'string.empty': '{{#label}} cannot be empty',
  'number.positive': '{{#label}} must be positive',
  'number.min': '{{#label}} must be at least {{#limit}}',
  'number.max': '{{#label}} must be at most {{#limit}}',
});

// Query parameters schema for listing DG Quotations
export const getDGQuotationsQuerySchema = Joi.object({
  page: Joi.number().integer().min(1).default(1),
  limit: Joi.number().integer().min(1).max(100).default(10),
  search: Joi.string().optional().trim().allow(''),
  status: Joi.string().valid('Draft', 'Sent', 'Accepted', 'Rejected', 'Expired').optional(),
  dgEnquiry: Joi.string().optional().trim().allow(''),
  customerId: Joi.string().optional().trim().allow(''),
  startDate: Joi.date().optional(),
  endDate: Joi.date().optional(),
  sortBy: Joi.string().valid('issueDate', 'quotationNumber', 'grandTotal', 'status', 'createdAt').default('issueDate'),
  sortOrder: Joi.string().valid('asc', 'desc').default('desc'),
}).messages({
  'number.integer': '{{#label}} must be an integer',
  'number.min': '{{#label}} must be at least {{#limit}}',
  'number.max': '{{#label}} must be at most {{#limit}}',
  'string.valid': '{{#label}} must be one of {{#valids}}',
}); 